export class MonitorErrorHandlerImpl{constructor(r){this.monitorUrl=r}handleError(r){let e={method:"POST",headers:{"Content-Type":"application/json"},body:this.errorToBodyJson(r)};if(void 0===this.monitorUrl){console.error("monitorUrl is undefined");return}fetch(this.monitorUrl,e).catch(r=>console.error(r)),console.error(r)}errorToBodyJson(r){let e=r.stack;e||(e="");let t=/(https?:\/\/[^\s]+):(\d+):(\d+)/.exec(e),o=null;return null!==t&&(o=t[1]+t[2]+t[3]),JSON.stringify({discriminator:(r.name+o).replace(/\s/g,""),severity:"high",name:r.name,message:r.message,stackTrace:r.stack})}}let monitorUrl=document?.querySelector('meta[name="monitor-url"]')?.getAttribute("content");if(monitorUrl){let r=new MonitorErrorHandlerImpl(new URL(monitorUrl));window.addEventListener("error",e=>{r.handleError(e.error)}),window.addEventListener("securitypolicyviolation",e=>{let t=Error(`Content Security Policy violation: blockedURI=${e.blockedURI}, effectiveDirective=${e.effectiveDirective}, violatedDirective=${e.violatedDirective}`);r.handleError(t)})}